buildscript {
    ext {
        kotlinVersion = '1.2.20'
        springBootVersion = '2.0.0.RC1'
        swaggerVersion = "2.6.1"
    }
    repositories {
        mavenCentral()
        maven { url 'http://maven.aliyun.com/nexus/content/groups/public/' }
        maven { url 'http://dl.bintray.com/kotlin/kotlin-eap-1.2' }
        maven { url "https://repo.spring.io/snapshot" }
        maven { url "https://repo.spring.io/milestone" }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlinVersion}")
        classpath "org.jetbrains.kotlin:kotlin-noarg:$kotlinVersion"
        classpath "org.jetbrains.kotlin:kotlin-allopen:$kotlinVersion"
    }
}


apply plugin: 'kotlin'
apply plugin: 'kotlin-spring'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: "kotlin-allopen"
apply plugin: "kotlin-noarg"

noArg {
    annotation("kindergarten.annotation.PoKo")
}
allOpen {
    annotation("kindergarten.annotation.PoKo")
}
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

sourceSets {
    main.kotlin.srcDirs += 'src/main/kotlin'
    //这个也要设置为kotlin目录 要不打包后出现找不到java类
    main.java.srcDirs += 'src/main/kotlin'
}
compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

repositories {
    mavenCentral()
    maven { url 'http://maven.aliyun.com/nexus/content/groups/public/' }
    maven { url 'http://dl.bintray.com/kotlin/kotlin-eap-1.2' }
    maven { url "https://repo.spring.io/snapshot" }
    maven { url "https://repo.spring.io/milestone" }
}

configurations {
    all*.exclude module: 'spring-boot-starter-logging'
    all*.exclude module: 'logback-classic'
    all*.exclude module: 'log4j-over-slf4j'
}

dependencies {
    compile('org.springframework.boot:spring-boot-starter-web')
    compile('org.springframework.boot:spring-boot-starter-log4j2')
    compile('org.springframework.boot:spring-boot-starter-aop')
    compile('org.springframework.boot:spring-boot-starter-security')
//    compile('org.springframework.boot:spring-boot-starter-activemq')
    compile("org.springframework.boot:spring-boot-devtools")
    compile('org.springframework.boot:spring-boot-starter-jdbc')
    compile('org.springframework.boot:spring-boot-starter-actuator')
    compile('org.springframework.integration:spring-integration-mail')
    compile('org.springframework.security.oauth:spring-security-oauth')
    runtime('mysql:mysql-connector-java')


    compile group: 'com.alibaba', name: 'druid', version: '1.1.2'
    compile('org.springframework.boot:spring-boot-starter-data-redis')

    compile('io.jsonwebtoken:jjwt:0.7.0')

    //    替换此处版本号后需要替换spring-devtools.properties里面的版本号
    compile 'com.ibeetl:beetl:2.7.26'
    compile 'com.ibeetl:beetlsql:2.10.3'
//    compile 'com.ibeetl:beetl-framework-starter:1.1.13.RELEASE'
//    compile 'com.alibaba:druid-spring-boot-starter:1.1.2'

//    compile 'com.alibaba:fastjson:1.2.35'
    compile 'com.qcloud:qcloud-sdk:2.1.6'
    compile("io.springfox:springfox-swagger2:$swaggerVersion",
            "io.springfox:springfox-swagger-ui:$swaggerVersion")

//	compile('org.springframework.session:spring-seossion')'

//	compile('org.springframework.boot:spring-boot-starter-thymeleaf')

    compile("org.jetbrains.kotlin:kotlin-stdlib-jdk8:${kotlinVersion}")
    compile("org.jetbrains.kotlin:kotlin-reflect:${kotlinVersion}")

    compile files("libs/aliyun-java-sdk-core-3.2.3.jar")
    compile files("libs/aliyun-java-sdk-dysmsapi-1.0.0-SNAPSHOT.jar")

    testCompile('org.springframework.boot:spring-boot-starter-test')

    //tools
    compile 'cn.hutool:hutool-core:4.0.0'
    compile 'org.jetbrains.kotlinx:kotlinx-coroutines-core:0.16'
    compile 'com.qcloud:cos_api:4.4'
}
kotlin {
    experimental {
        coroutines "enable"
    }
}
